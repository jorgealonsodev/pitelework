version: "3"

services:
  openvpn:
    cap_add:
     - NET_ADMIN
    image: darathor/openvpn
    container_name: openvpn
    ports:
     - "1194:1194/udp"
    restart: always
    volumes:
        - ~/datos-vpn:/etc/openvpn    
    ports:
      - 3000:1194/udp
    networks:
      - net

  web:
    image: arm64v8/odoo:12.0
    container_name: odoo
    restart: always
    depends_on:
      - db
    ports: 
      - 8069:8069
      - 8071:8071
    volumes:
      - /mnt/odoo/odoo-web-data:/var/lib/odoo
      # - /mnt/odoo/setup:/opt/odoo/setup/
      - /mnt/odoo/config:/etc/odoo
      - /mnt/odoo/addons:/mnt/extra-addons
      # - /mnt/odoo/scss:/usr/lib/python3/dist-packages/odoo/addons/web/static/src/scss
    environment:
      - VIRTUAL_HOST=erp.pitelework.duckdns.org,erp.vpn-pitelework.duckdns.org
      - VIRTUAL_PORT=8069
      - LETSENCRYPT_HOST=erp.pitelework.duckdns.org
      - LETSENCRYPT_EMAIL=jorgealonsodev@gmail.com
    networks:
      - net
      - odoo

  db:
    image: postgres:10
    container_name: odoo-db
    restart: always
    environment:
      - POSTGRES_DB=/run/secrets/odoo/odoo_db
      - POSTGRES_PASSWORD=/run/secrets/odoo/odoo_password
      - POSTGRES_USER=/run/secrets/odoo/odoo_user
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - /mnt/odoo/data/pgdata:/var/lib/postgresql/data/pgdata
    secrets:
      - odoo_db
      - odoo_password
      - odoo_user
    networks:
      - odoo
  
  nextdb:
    image: postgres
    restart: always
    container_name: nextcloud-db
    volumes:
      - /mnt/postgres/db:/var/lib/postgresql/data
    environment:
      - NEXTCLOUD_OVERWRITEPROTOCOL=https
      - POSTGRES_DB_FILE=/run/secrets/postgres_db
      - POSTGRES_USER_FILE=/run/secrets/postgres_user
      - POSTGRES_PASSWORD_FILE=/run/secrets/postgres_password
    secrets:
      - postgres_db
      - postgres_password
      - postgres_user
    networks:
      - net

  adminer:
    image: adminer
    container_name: adminer
    restart: always
    ports:
      - 8090:8080
    environment:
      - VIRTUAL_HOST=adminer.pitelework.duckdns.org,adminer.vpn-pitelework.duckdns.org
      - LETSENCRYPT_HOST=adminer.pitelework.duckdns.org
      - LETSENCRYPT_EMAIL=jorgealonsodev@gmail.com
    networks:
      - net
      - odoo 

  app:
    image: nextcloud
    restart: always
    container_name: nextcloud
    ports:
      - 8080:80
    volumes:
      - /mnt/nextcloud/data:/var/www/html
    environment:
      - NEXTCLOUD_OVERWRITEPROTOCOL=https
      - POSTGRES_HOST=nextdb
      - POSTGRES_DB_FILE=/run/secrets/postgres_db
      - POSTGRES_USER_FILE=/run/secrets/postgres_user
      - POSTGRES_PASSWORD_FILE=/run/secrets/postgres_password
      - NEXTCLOUD_ADMIN_PASSWORD_FILE=/run/secrets/nextcloud_admin_password
      - NEXTCLOUD_ADMIN_USER_FILE=/run/secrets/nextcloud_admin_user
      - VIRTUAL_HOST=cloud.pitelework.duckdns.org,cloud.vpn-pitelework.duckdns.org
      - LETSENCRYPT_HOST=cloud.pitelework.duckdns.org
      - LETSENCRYPT_EMAIL=jorgealonsodev@gmail.com
    depends_on:
      - nextdb
    secrets:
      - nextcloud_admin_password
      - nextcloud_admin_user
      - postgres_db
      - postgres_password
      - postgres_user
    networks:
      - net
    # Despu√©s de lanzar docker-compose up ejecutar
    # docker-compose exec --user www-data app php occ config:system:set overwriteprotocol --value="https"

  bitwarden:
    image: bitwardenrs/server:latest
    container_name: bitwarden
    ports:
      - 90:90
      - 8060:80
      - 3012:3012
    volumes:
      - /mnt/bitwarden:/data
    restart: on-failure
    environment:
      - VIRTUAL_HOST=bitwarden.pitelework.duckdns.org,bitwarden.vpn-pitelework.duckdns.org
      - LETSENCRYPT_HOST=bitwarden.pitelework.duckdns.org
      - LETSENCRYPT_EMAIL=jorgealonsodev@gmail.com
    networks:
      - net

  nginx-proxy:
    image: budry/jwilder-nginx-proxy-arm
    container_name: nginx-proxy
    restart: always
    depends_on:
      - web
    ports:
      - "443:443"
    # environment:
    #   - HSTS=max-age=31536000;
    #   - HSTS=includeSubDomains;
    #   - HSTS=preload;
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - /mnt/certs:/etc/nginx/certs:ro
      - /mnt/confd:/etc/nginx/conf.d
      - /mnt/vhostd:/etc/nginx/vhost.d
      - /mnt/html:/usr/share/nginx/html
    labels:
      - com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy
    networks:
      - net

  letsencrypt:
    image: duch/letsencrypt-nginx-proxy-companion:stable
    container_name: letsencrypt
    depends_on:
      - web
    restart: always
    volumes:
      - /mnt/letsencrypt/certs:/etc/nginx/certs:rw
      - /mnt/confd:/etc/nginx/conf.d
      - /mnt/vhostd:/etc/nginx/vhost.d
      - /mnt/html:/usr/share/nginx/html
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - net  

  nginx-web:
    image: nginx
    container_name: landing-page
    restart: always
    ports:
      - 8040:80
    volumes:
      - /mnt/www:/usr/share/nginx/html:ro
    environment:
      - VIRTUAL_HOST=pitelework.duckdns.org
      - LETSENCRYPT_HOST=pitelework.duckdns.org
      - LETSENCRYPT_EMAIL=jorgealonsodev@gmail.com
    networks:
      - net

  vpn-nginx-web:
    image: nginx
    container_name: vpn-landing-page
    restart: always
    ports:
      - 8041:80
    volumes:
      - /mnt/www2:/usr/share/nginx/html:ro
    environment:
      - VIRTUAL_HOST=vpn-pitelework.duckdns.org
    networks:
      - net

  vpn-proxy:
    image: budry/jwilder-nginx-proxy-arm
    container_name: vpn-proxy
    restart: always
    depends_on:
      - web
    ports:
      - "80:80"
    environment: 
      - DEFAULT_HOST=vpn-pitelework.duckdns.org
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - /mnt/vpn/certs:/etc/nginx/certs:ro
      - /mnt/vpn/confd:/etc/nginx/conf.d
      - /mnt/vpn/vhostd:/etc/nginx/vhost.d
      - /mnt/vpn/html:/usr/share/nginx/html
    networks:
      - net  

secrets:
  nextcloud_admin_password:
    file: /mnt/nextcloud/secrets/nextcloud_admin_password.txt # put admin password to this file
  nextcloud_admin_user:
    file: /mnt/nextcloud/secrets/nextcloud_admin_user.txt # put admin username to this file
  postgres_db:
    file: /mnt/nextcloud/secrets/postgres_db.txt # put postgresql db name to this file
  postgres_password:
    file: /mnt/nextcloud/secrets/postgres_password.txt # put postgresql password to this file
  postgres_user:
    file: /mnt/nextcloud/secrets/postgres_user.txt # put postgresql username to this file
  odoo_db:
    file: /mnt/secrets/odoo/odoo_db.txt # put postgresql db name to this file
  odoo_password:
    file: /mnt/secrets/odoo/odoo_password.txt # put postgresql password to this file
  odoo_user:
    file: /mnt/secrets/odoo/odoo_user.txt # put postgresql username to this file
  

networks:
  net:
  odoo:

